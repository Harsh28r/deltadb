version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: deltayards-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: deltayards_crm
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - deltayards-network

  # DeltaYards CRM API
  api:
    build: .
    container_name: deltayards-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGO_URI: mongodb://admin:password123@mongodb:27017/deltayards_crm?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - deltayards-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Cron Service for Scheduled Tasks
  cron:
    build:
      context: .
      dockerfile: Dockerfile.cron
    container_name: deltayards-cron
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGO_URI: mongodb://admin:password123@mongodb:27017/deltayards_crm?authSource=admin
    depends_on:
      - mongodb
    volumes:
      - ./logs:/app/logs
    networks:
      - deltayards-network
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('Cron service is running'); process.exit(0)"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: deltayards-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - deltayards-network

volumes:
  mongodb_data:

networks:
  deltayards-network:
    driver: bridge
